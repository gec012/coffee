generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  price       Float
  image       String
  categoryId  Int
  category    Category        @relation(fields: [categoryId], references: [id])
  orderItems  OrderProducts[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String   // "client", "waiter", "admin"
  orders    OrderTable[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderTable {
  id              Int             @id @default(autoincrement())
  name            String?         // opcional, si cliente local quiere nombre
  total           Float
  date            DateTime        @default(now())
  status          String          @default("pendiente") // "pendiente", "en_preparacion", "listo_para_entregar", "entregado"
  tableId         String?         // opcional, mesa
  userId          Int?            // nullable si cliente local anónimo
  user            User?           @relation(fields: [userId], references: [id])
  orderProducts   OrderProducts[]
  paymentStatus   String          @default("pendiente") // "pendiente", "pagado"
  paymentMethod   String?         // "efectivo", "tarjeta", "mercadopago", "transferencia"
  deliveryAddress String?         // solo si es delivery
  deliveryComment String?         // solo si es delivery
  ticketGenerated Boolean         @default(false)
  paymentProof    String?         // URL o path del comprobante de transferencia
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model OrderProducts {
  id         Int          @id @default(autoincrement())
  orderId    Int
  order      OrderTable   @relation(fields: [orderId], references: [id])
  productId  Int
  product    Product      @relation(fields: [productId], references: [id])
  quantity   Int
  dispatched Boolean      @default(false) // ✅ nuevo campo
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}
